<!DOCTYPE html>
<html class="no-js" lang="zh-CN">

<head>
        <link rel="canonical" href="https://sockscap64.github.io/news/article-30136.htm" />
    <title>什么是Python高阶函数</title>
        <meta name="description" content="什么是高阶函数 高阶函数就是能够把函数当成参数传递的函数就是高阶函数，换句话说如果一个函数的参数是函数，那么这个函数就是一个高阶函数。 高阶函数可以是你使用def关键字自定义的函数，也有Python系" />
        <link rel="icon" href="/assets/website/img/sockscap64/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="Sockscap64免费机场节点分享官网">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://sockscap64.github.io/news/article-30136.htm" />
    <meta property="og:site_name" content="Sockscap64免费机场节点分享官网" />
    <meta property="og:title" content="什么是Python高阶函数" />
    <meta property="og:image" content="https://sockscap64.github.io/uploads/20241223-1/9970033df7c0b33bf2d249365f7aa1c5.webp" />
        <meta property="og:release_date" content="2024-12-23T21:36:46" />
    <meta property="og:updated_time" content="2024-12-23T21:36:46" />
        <meta property="og:description" content="什么是高阶函数 高阶函数就是能够把函数当成参数传递的函数就是高阶函数，换句话说如果一个函数的参数是函数，那么这个函数就是一个高阶函数。 高阶函数可以是你使用def关键字自定义的函数，也有Python系" />
        
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta charset="UTF-8">

    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="什么是Python高阶函数">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    <link rel="dns-prefetch" href="https://fonts.googleapis.com">

    <link href='http://fonts.googleapis.com/css?family=Open+Sans:400italic,600italic,400,300,600,700,800' rel='stylesheet' type='text/css'>
    <link href='http://fonts.googleapis.com/css?family=Droid+Serif:400,700,400italic,700italic' rel='stylesheet' type='text/css'>
    <!-- CSS Bootstrap & Custom -->
    <link href="/assets/website/js/frontend/sockscap64/bootstrap/css/bootstrap.css" rel="stylesheet" media="screen">
    <link rel="stylesheet" href="/assets/website/css/sockscap64/font-awesome.min.css">
    <link rel="stylesheet" href="/assets/website/css/sockscap64/templatemo-misc.css">
    <link rel="stylesheet" href="/assets/website/css/sockscap64/animate.css">
    <link rel="stylesheet" href="/assets/website/css/sockscap64/templatemo-main.css">
    <!-- JavaScripts -->
    <script src="/assets/website/js/frontend/sockscap64/jquery-1.10.2.min.js"></script>
    <script src="/assets/website/js/frontend/sockscap64/modernizr.js"></script>
    <!--[if lt IE 8]>
<div style=' clear: both; text-align:center; position: relative;'>
        <a href="http://www.microsoft.com/windows/internet-explorer/default.aspx?ocid=ie6_countdown_bannercode"><img src="http://storage.ie6countdown.com/assets/100/images/banners/warning_bar_0000_us.jpg" border="0" alt="" /></a>
    </div>
<![endif]-->
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-FWWSJRFYQE"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-FWWSJRFYQE');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <div id="home">
        <div class="site-header">
            <div class="main-header">
                <div class="container">
                    <div class="row">
                        <div class="col-md-4 col-sm-4 col-xs-6">
                            <div class="logo">
                                <a href="/">
                                                                        <span>Sockscap64</span>
                                                                </div> <!-- /.logo -->
                        </div> <!-- /.col-md-4 -->
                        <div class="col-md-8 col-sm-8 col-xs-6">
                            <div class="menu text-right hidden-sm hidden-xs">
                                <ul>
                                                                        <li><a href="/">首页</a></li>
                                                                        <li><a href="/free-nodes/">免费节点</a></li>
                                                                        <li><a href="/paid-subscribe/">推荐机场</a></li>
                                                                        <li><a href="/news/">新闻资讯</a></li>
                                                                        <li><a href="#">关于</a></li>
                                    <li><a href="#">联系</a></li>
                                </ul>
                            </div> <!-- /.menu -->
                        </div> <!-- /.col-md-8 -->
                    </div> <!-- /.row -->
                    <div class="responsive-menu text-right visible-xs visible-sm">
                        <a href="#" class="toggle-menu fa fa-bars"></a>
                        <div class="menu">
                            <ul>
                                                                <li><a href="/">首页</a></li>
                                                                <li><a href="/free-nodes/">免费节点</a></li>
                                                                <li><a href="/paid-subscribe/">推荐机场</a></li>
                                                                <li><a href="/news/">新闻资讯</a></li>
                                                                <li><a href="#">关于</a></li>
                                <li><a href="#">联系</a></li>
                            </ul>
                        </div> <!-- /.menu -->
                    </div> <!-- /.responsive-menu -->
                </div> <!-- /.container -->
            </div> <!-- /.header -->
        </div> <!-- /.site-header -->
    </div> <!-- /#home -->
    <div class="flexslider">
        <ul class="slides">
            <li>
                <img src="/assets/website/img/sockscap64/banner01.jpg" alt="">
                <div class="flex-caption">
                    <h1>什么是Python高阶函数</h1>
                    <span></span>
                    <p>
                        <a href="/">首页</a> / <a href="/news/">新闻资讯</a> / 正文
                    </p>
                </div>
            </li>
        </ul>
    </div>
    <div id="services" class="section-cotent">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                                    <input type="hidden" id="share-website-info" data-name="Clash Node官网订阅站" data-url="https://clashnode.github.io">
                  				  				  				</h1> <h3 id="什么是高阶函数">什么是高阶函数</h3> <p>高阶函数就是能够把函数当成参数传递的函数就是高阶函数，换句话说如果一个函数的参数是函数，那么这个函数就是一个高阶函数。</p> <p>高阶函数可以是你使用<code>def</code>关键字自定义的函数，也有Python系统自带的内置高阶函数。</p> <h3 id="自定义一个高阶函数">自定义一个高阶函数</h3> <p>我们下面的例子中，函数 senior 的参数中有一个是函数，那么senior就是一个高阶函数；函数 tenfold 的参数不是函数，所以tenfold就只是一个普通的函数。</p> <pre><code class="language-python"># 定义高阶函数 def senior(func, container):    """    将容器中的数据依次放入函数中进行运算，    将结果返回到迭代器中，最后返回迭代器。    """    lst = list()    for i in container:       lst.append(func(i))    return iter(lst)   # 定义普通的功能函数 def tenfold(num):    """    十倍器    将数据乘 10，返回结果。    """    return num * 10   # 定义一个列表 lst = [10, 20666, 'msr']  # 使用高阶函数 it = senior(tenfold, lst) print(list(it)) # [100, 206660, 'msrmsrmsrmsrmsrmsrmsrmsrmsrmsr']</code></pre> <h3 id="常用的内置高阶函数">常用的内置高阶函数</h3> <table> <thead> <tr> <th>函数</th> <th>功能作用</th> </tr> </thead> <tbody> <tr> <td>map</td> <td>处理可迭代对象中的数据，将处理的结果返回到迭代器中。</td> </tr> <tr> <td>filter</td> <td>过滤可迭代对象中的数据，将过滤好的数据返回到迭代器中。</td> </tr> <tr> <td>reduce</td> <td>处理可迭代对象中的数据，将最终的结果返回出来。</td> </tr> <tr> <td>sorted</td> <td>排序可迭代对象中的数据，将排序好的结果返回出来。</td> </tr> </tbody> </table> <h3 id="map函数">map函数</h3> <blockquote> <p>语法：map(function, Iterable)</p> </blockquote> <h4 id="参数说明">参数说明</h4> <p>function：函数，可以是 自定义函数 或者是 内置函数；</p> <p>iterable：可迭代对象，可迭代性数据。（容器类型数据和类容器类型数据、range对象、迭代器）</p> <h4 id="功能">功能</h4> <p>把可迭代对象中的数据一个一个拿出来，然后放在到指定的函数中做处理，将处理之后的结果依次放入迭代器中，最后返回这个迭代器。</p> <h4 id="实例">实例</h4> <p><strong>将列表中的元素转成整型类型，然后返回出来。</strong></p> <pre><code class="language-python">lst = ['1', '2', '3', '4']  """ 使用常规的写法 """ new_lst = list() for i in lst:     new_lst.append(int(i)) print(new_lst)  # [1, 2, 3, 4]   """ 使用map函数实现 """ it = map(int, lst) new_lst = list(it) print(new_lst)  # [1, 2, 3, 4]</code></pre> <p><strong>列表中的每一个数依次乘 2的下标索引+1 次方。使用自定义的函数，配合实现功能。</strong></p> <pre><code class="language-Python">lst = [1, 2, 3, 4]  """ 普通的方法，利用左移 """ new_lst = list() for i in lst: 	res = i &lt;&lt; i 	new_lst.append(res) print(new_lst)  # [2, 8, 24, 64]   """ 使用map函数 """ # 先定义一个左移函数，自定义的函数必须是一个带参函数并且有返回值 def func(num): 	return num &lt;&lt; num new_lst = list(map(func, lst)) print(new_lst)  # [2, 8, 24, 64]   """ 使用lambda简化 """ new_lst = list(map(lambda num: num &lt;&lt; num, lst)) print(new_lst)  # [2, 8, 24, 64]</code></pre> <h3 id="filter函数">filter函数</h3> <blockquote> <p>语法：filter(function, iterable)</p> </blockquote> <p>参数的意义和map函数一样</p> <h4 id="功能-1">功能</h4> <p>filter用于过滤数据，将可迭代对象中的数据一个一个的放入函数中进行处理，如果函数返回值为真，将数据保留；反之不保留，最好返回迭代器。</p> <h4 id="实例-1">实例</h4> <p><strong>保留容器中的偶数</strong></p> <pre><code class="language-python">lst = [11, 2, 3, 34, 4, 4, 55]  """ 常规写法 """ new_lst = list() for i in lst:    if i % 2 == 0:       new_lst.append(i) print(new_lst)  # [2, 34, 4, 4]   """ 使用filter函数 """ def func(num):    if num % 2 == 0:       return True new_lst = list(filter(func, lst)) print(new_lst)  # [2, 34, 4, 4]   """ filter + lambda """ new_lst = list(filter(lambda num: True if (num % 2 == 0) else False, lst)) print(new_lst)  # [2, 34, 4, 4]</code></pre> <h3 id="reduce函数">reduce函数</h3> <blockquote> <p>语法：reduce(function, iterable)</p> </blockquote> <p>参数含义与map、filter一致。</p> <h4 id="功能-2">功能</h4> <p>计算数据，将可迭代对象的中的前两个值放在函数中做出运算，得出结果在和第三个值放在函数中运算得出结果，以此类推，直到所有的结果运算完毕，返回最终的结果。</p> <p>根据功能我们就应该直到，reduce中的函数需要可以接收两个参数才可以。</p> <h4 id="实例-2">实例</h4> <blockquote> <p><strong>reduce函数使用需要先从标准库functools中导入</strong></p> </blockquote> <p><strong>将列表中的数据元素组合成为一个数，</strong></p> <pre><code class="language-python">from functools import reduce  lst = [2, 0, 6, 6, 6]   """ 常规方法 """ char = str() for i in lst:    char += str(i) print(int(char))    # 20666   """ 使用reduse函数 """ def func(x, y):    return x * 10 + y res = reduce(func, lst) print(res)  # 20666   """ reduce + lambda """ res = reduce((lambda x, y: (x * 10 + y)), lst) print(res)  # 20666</code></pre> <h3 id="sorted函数">sorted函数</h3> <blockquote> <p>语法：sorted(Iterable, key=function, reverse=False)</p> </blockquote> <h4 id="参数说明-1">参数说明</h4> <p>iterable：可迭代对象；</p> <p>key：指定函数，默认为空；</p> <p>reverse：排序的方法，默认为False，意为升序；</p> <h4 id="功能-3">功能</h4> <p>如果没有指定函数，就单纯的将数据安札ASCII进行排序；如果指定了函数，就将数据放入函数中进行运算，根据数据的结果进行排序，返回新的数据，不会改变原有的数据。</p> <p><strong>注意，如果指定了函数，排序之后是根据数据的结果对原数据进行排序，而不是排序计算之后的就结果数据。</strong></p> <h4 id="实例-3">实例</h4> <p>将列表中的数据进行排序。</p> <pre><code class="language-python">lst = [1, 23, 34, 5, 6, 342, 12, 12, 2345, -3]  """ 使用列表的内置函数进行排序，默认升序 """ lst.sort() print(lst)  # [-3, 1, 5, 6, 12, 12, 23, 34, 342, 2345] # 降序排序 lst.sort(reverse=True) print(lst)  # [2345, 342, 34, 23, 12, 12, 6, 5, 1, -3]   lst = [1, 23, 34, 5, 6, 342, 12, 12, 2345, -3] """ 使用sorted进行排序 """ new_lst = sorted(lst) print(new_lst)  # [-3, 1, 5, 6, 12, 12, 23, 34, 342, 2345] print(lst)      # [1, 23, 34, 5, 6, 342, 12, 12, 2345, -3]</code></pre> <p>还有一点就是 sorted 函数可以将数据放入函数中进行处理，然后根据结果进行排序。</p> <pre><code class="language-python">lst = [1, 23, 34, 5, 6, 342, 12, 12, 2345, -3]  """ 按照绝对值进行排序 """ new_lst = sorted(lst, key=abs) print(new_lst)  # [1, -3, 5, 6, 12, 12, 23, 34, 342, 2345]   """ 按照除以10的余数进行排序 """ def func(num):    return num % 10 new_lst = sorted(lst, key=func) print(new_lst)  # [1, 342, 12, 12, 23, 34, 5, 2345, 6, -3]  # 可以看到，我们指定函数之后排序的结果既不是原数据的绝对值、也不是原数据除以10的余数，而是根据这两种计算结果对原数据进行了排序。</code></pre> <h4 id="sort和sorted">sort和sorted</h4> <p>既然有了列表的内置函数sort，为什么我们还要使用sorted函数呢？</p> <ol> <li>sorted可以排序一切可迭代对象，但是sort只是列表的内置函数，只能对列表进行排序；</li> <li>sorted排序返回新的数据，不改变原数据，sort改变了原数据；</li> <li>sorted可以指定函数，根据函数的计算结果、按照某一种方式进行排序，但是sort只能单纯的根据数字大小和ASCII进行排序。</li> </ol> <h3 id="总结">总结</h3> <p>高阶函数就是将函数作为参数的函数。</p> <pre><code>map(Function,Iterable)（将可迭代性数据中的元素一一取出放入函数中进行运算在将结果返回，最后返回的数据类型是迭代器）  filter(Function,Iterable)（过滤数据，将可迭代性数据放入函数中进行运算，结果为真将数据返回，反之舍弃，最会返回的数据类型是迭代器）  reduce(Function,Iterable)（计算数据，将可迭代型数据中的前两个元素拿出放入函数中进行运算将结果在与后一个元素进行运算，最后返回最终的结果）  sorted(Iterable,[key=Function],[reverse =Bool(False(default)/True)])（将可迭代型数据进行排序，或将可迭代型数据放入函数中进行运算将结果进行排序返回）</code></pre> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>下一个：<a href="/news/article-30137.htm">学兽医去哪里学比较好就业（学兽医去哪里学比较好就业方向）</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-44834.htm" title="动物疫苗生产资质要求（动物疫苗生产资质要求是什么）">动物疫苗生产资质要求（动物疫苗生产资质要求是什么）</a></li>
                        <li class="py-2"><a href="/news/article-49817.htm" title="开宠物医院的条件有哪些（开宠物医院都需要什么证件）">开宠物医院的条件有哪些（开宠物医院都需要什么证件）</a></li>
                        <li class="py-2"><a href="/news/article-42850.htm" title="宠物猫打疫苗多少钱一次（宠物猫打疫苗多少钱一次打几针）">宠物猫打疫苗多少钱一次（宠物猫打疫苗多少钱一次打几针）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-5-free-node-subscribe-links.htm" title="1月5日→20.2M/S|2025年最新免费节点Sockscap64订阅链接地址">1月5日→20.2M/S|2025年最新免费节点Sockscap64订阅链接地址</a></li>
                        <li class="py-2"><a href="/news/article-37414.htm" title="开一个宠物零食工厂赚钱吗（开个宠物零食店需要多少钱）">开一个宠物零食工厂赚钱吗（开个宠物零食店需要多少钱）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-26-free-subscribe-node.htm" title="1月26日→19.5M/S|2025年最新免费节点Sockscap64订阅链接地址">1月26日→19.5M/S|2025年最新免费节点Sockscap64订阅链接地址</a></li>
                        <li class="py-2"><a href="/news/article-31678.htm" title="linux搭建NFS网络文件共享服务">linux搭建NFS网络文件共享服务</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-13-node-share-links.htm" title="1月13日→18.9M/S|2025年最新免费节点Sockscap64订阅链接地址">1月13日→18.9M/S|2025年最新免费节点Sockscap64订阅链接地址</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-28-free-node-subscribe-links.htm" title="1月28日→22.2M/S|2025年最新免费节点Sockscap64订阅链接地址">1月28日→22.2M/S|2025年最新免费节点Sockscap64订阅链接地址</a></li>
                        <li class="py-2"><a href="/news/article-30245.htm" title="宠物粮食品牌前十排名榜单 宠物粮食品牌前十排名榜单图片">宠物粮食品牌前十排名榜单 宠物粮食品牌前十排名榜单图片</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">6</span> <a href="/date/2025-02/" title="2025-02 归档">2025-02</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">93</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">27</span> <a href="/date/2024-12/" title="2024-12 归档">2024-12</a></h4>
            </li>
                    </ul>
    </div>
</div>

                </div>
            </div> <!-- /.row -->
        </div> <!-- /.container -->
    </div> <!-- /#services -->
        <div class="site-footer">
        <div class="container">
            <div class="row">
                <div class="col-md-8 col-sm-8 col-xs-12">
                    <p>
                        <a href="/">首页</a> |
                        <a href="/free-node/">免费节点</a> |
                        <a href="/news/">新闻资讯</a> |
                        <a href="/about-us.htm">关于我们</a> |
                        <a href="/disclaimer.htm">免责申明</a> |
                        <a href="/privacy.htm">隐私申明</a> |
                        <a href="/sitemap.xml">网站地图</a>
                    </p>
                    <p>Sockscap64免费机场节点分享官网 版权所有 Powered by WordPress</p>
                </div> <!-- /.col-md-6 -->
                <div class="col-md-4 col-sm-4 col-xs-12">
                    <div class="go-top">
                        <a href="#" id="go-top">
                            <i class="fa fa-angle-up"></i>
                            Back to Top
                        </a>
                    </div>
                </div> <!-- /.col-md-6 -->
            </div> <!-- /.row -->
        </div> <!-- /.container -->
    </div> <!-- /.site-footer -->
    <script src="/assets/website/js/frontend/sockscap64/bootstrap/js/bootstrap.min.js"></script>
    <script src="/assets/website/js/frontend/sockscap64/plugins.js"></script>
    <script src="/assets/website/js/frontend/sockscap64/jquery.lightbox.js"></script>
    <script src="/assets/website/js/frontend/sockscap64/custom.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script>
    <script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>